{
	"info": {
		"_postman_id": "d3a8cad3-a12f-4953-8491-77746d458efb",
		"name": "#2Project Restfull Booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40062290"
	},
	"item": [
		{
			"name": "SC01_Auth - CreateToken",
			"item": [
				{
					"name": "SC01_TC01_ValidCredentials✅",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"// Validate response body\r",
									"pm.test(\"Response body has a token\", function () {\r",
									"    pm.response.to.have.jsonBody('token');\r",
									"    pm.expect(pm.response.json().token).to.be.a('string');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/auth",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"auth"
							]
						},
						"description": "Generated from cURL: curl -X POST \\\r\n  https://restful-booker.herokuapp.com/auth \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "SC01_TC02_InValidCredentials ❌",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify authentication failure\", function () {\r",
									"    pm.response.to.have.status(200); // Expected but incorrect behavior\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    // Validate error message\r",
									"    pm.expect(jsonData).to.have.property(\"reason\", \"Bad credentials\");\r",
									"\r",
									"    // Ensure token is NOT present\r",
									"    pm.expect(jsonData).to.not.have.property(\"token\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"invalidUser\",\r\n  \"password\": \"wrongPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/auth",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"auth"
							]
						},
						"description": "Generated from cURL: curl -X POST \\\r\n  https://restful-booker.herokuapp.com/auth \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "SC01_TC03_MissingCredentials ❌",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"\",\r\n    \"password\" : \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/auth",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"auth"
							]
						},
						"description": "Generated from cURL: curl -X POST \\\r\n  https://restful-booker.herokuapp.com/auth \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}'"
					},
					"response": []
				}
			]
		},
		{
			"name": "SC02_GetBookingIds",
			"item": [
				{
					"name": "SC02_TC01_GetAllBookingIds✅",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Verify Status Code\r",
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
									"\r",
									"// ✅ Validate Response Body (Ensure booking IDs list is returned)\r",
									"pm.test(\"Response contains booking IDs\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an('array').that.is.not.empty;\r",
									"});\r",
									"\r",
									"// ✅ Verify Response Time (Performance Check)\r",
									"pm.test(\"Response time is within 2 seconds\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"// ✅ Validate Headers (Ensure JSON response)\r",
									"pm.test(\"Content-Type is JSON\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"// ✅ Check If Booking IDs\r",
									"pm.test(\"Booking IDs are numeric\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    jsonData.forEach(item => {\r",
									"        pm.expect(item).to.be.an('object'); // Ensure each entry is an object\r",
									"        pm.expect(item).to.have.property('bookingid'); // Check 'bookingid' key exists\r",
									"        pm.expect(item.bookingid).to.be.a('number'); // Ensure 'bookingid' value is numeric\r",
									"    });\r",
									"});\r",
									"\r",
									"// ✅ Negative Test: Handle Empty Response Gracefully\r",
									"pm.test(\"Handles empty response properly\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    if (jsonData.length === 0) console.log(\"No booking IDs found.\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						},
						"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/booking"
					},
					"response": []
				},
				{
					"name": "SC02_TC02_GetByFirstnameLastname ✅",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Verify Status Code\r",
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
									"\r",
									"// ✅ Validate Response Body (Check if booking list is returned)\r",
									"pm.test(\"Response contains booking data\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an('array').that.is.not.empty;\r",
									"});\r",
									"\r",
									"// ✅ Check If Response Contains Expected Keys\r",
									"pm.test(\"Each booking contains an ID\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    jsonData.forEach(item => {\r",
									"        pm.expect(item).to.be.an('object'); // Ensure each entry is an object\r",
									"        pm.expect(item).to.have.property('bookingid'); // Check 'bookingid' key exists\r",
									"        pm.expect(item.bookingid).to.be.a('number'); // Ensure 'bookingid' is numeric\r",
									"    });\r",
									"});\r",
									"\r",
									"// ✅ Verify Response Time (Performance Check)\r",
									"pm.test(\"Response time is within 2 seconds\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"// ✅ Validate Headers (Ensure JSON response)\r",
									"pm.test(\"Content-Type is JSON\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"// ✅ Handle Empty Response Gracefully\r",
									"pm.test(\"Handles empty response properly\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    if (jsonData.length === 0) console.log(\"No bookings found for given name.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking?firstname=sally&lastname=brown",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "firstname",
									"value": "sally"
								},
								{
									"key": "lastname",
									"value": "brown"
								}
							]
						},
						"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/booking?firstname=sally&lastname=brown"
					},
					"response": []
				},
				{
					"name": "SC02_TC03_GetByInvalidFirstnameLastname✅",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Verify Status Code\r",
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
									"\r",
									"\r",
									"// ✅ Verify Response Time (Performance Check)\r",
									"pm.test(\"Response time is within 2 seconds\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"// ✅ Validate Headers (Ensure JSON response)\r",
									"pm.test(\"Content-Type is JSON\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"// ✅ Check If Booking IDs\r",
									"pm.test(\"Booking IDs are numeric\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    jsonData.forEach(item => {\r",
									"        pm.expect(item).to.be.an('object'); // Ensure each entry is an object\r",
									"        pm.expect(item).to.have.property('bookingid'); // Check 'bookingid' key exists\r",
									"        pm.expect(item.bookingid).to.be.a('number'); // Ensure 'bookingid' value is numeric\r",
									"    });\r",
									"});\r",
									"\r",
									"// ✅ Negative Test: Handle Empty Response Gracefully\r",
									"pm.test(\"Handles empty response properly\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    if (jsonData.length === 0) console.log(\"No booking IDs found.\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking?firstname=invalid&lastname=invalid",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "firstname",
									"value": "invalid"
								},
								{
									"key": "lastname",
									"value": "invalid"
								}
							]
						},
						"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/booking?firstname=sally&lastname=brown"
					},
					"response": []
				},
				{
					"name": "SC02_TC04_GetByCheckinCheckoutDates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Verify Status Code\r",
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
									"\r",
									"// ✅ Check If Response Contains Expected Keys\r",
									"pm.test(\"Each booking contains an ID\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    jsonData.forEach(item => {\r",
									"        pm.expect(item).to.be.an('object'); // Ensure each entry is an object\r",
									"        pm.expect(item).to.have.property('bookingid'); // Check 'bookingid' key exists\r",
									"        pm.expect(item.bookingid).to.be.a('number'); // Ensure 'bookingid' is numeric\r",
									"    });\r",
									"});\r",
									"\r",
									"// ✅ Verify Response Time (Performance Check)\r",
									"pm.test(\"Response time is within 2 seconds\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"// ✅ Validate Headers (Ensure JSON response)\r",
									"pm.test(\"Content-Type is JSON\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"// ✅ Handle Empty Response Gracefully\r",
									"pm.test(\"Handles empty response properly\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    if (jsonData.length === 0) console.log(\"No bookings found for given dates.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking?checkin=2014-03-13&checkout=2014-05-21",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "checkin",
									"value": "2014-03-13"
								},
								{
									"key": "checkout",
									"value": "2014-05-21"
								}
							]
						},
						"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/booking?checkin=2014-03-13&checkout=2014-05-21"
					},
					"response": []
				},
				{
					"name": "SC02_TC05_GetWithInvalidDates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Verify Status Code (Should NOT be 500)\r",
									"pm.test(\"Should not return 500 Internal Server Error\", () => {\r",
									"    pm.expect(pm.response.code).to.not.equal(500);\r",
									"});\r",
									"\r",
									"// ✅ Expected: 400 Bad Request (or 404 if the resource doesn’t exist)\r",
									"pm.test(\"Invalid dates should return 400 or 404\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
									"});\r",
									"\r",
									"// ✅ Validate Response Body (Check if an error message is provided)\r",
									"pm.test(\"Response should contain a proper error message\", () => {\r",
									"    let jsonData;\r",
									"    try {\r",
									"        jsonData = pm.response.json();\r",
									"        pm.expect(jsonData).to.be.an('object');\r",
									"        pm.expect(jsonData).to.have.property(\"reason\"); // Ensure error message exists\r",
									"    } catch (e) {\r",
									"        pm.test(\"Response is not in JSON format\", () => {\r",
									"            pm.expect(false).to.be.true; // Force failure if JSON parsing fails\r",
									"        });\r",
									"    }\r",
									"});\r",
									"\r",
									"// ✅ Log the Response Body (For Debugging)\r",
									"console.log(\"Response Body:\", pm.response.text());\r",
									"\r",
									"// ✅ Validate Headers (Ensure JSON response)\r",
									"pm.test(\"Content-Type should be JSON\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking?checkin=ABC&checkout=XYZ",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "checkin",
									"value": "ABC"
								},
								{
									"key": "checkout",
									"value": "XYZ"
								}
							]
						},
						"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/booking?checkin=2014-03-13&checkout=2014-05-21"
					},
					"response": []
				}
			]
		},
		{
			"name": "SC03_GetBooking",
			"item": [
				{
					"name": "SC03_TC01_GetBookingById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Verify Status Code (Should be 200 if booking exists)\r",
									"pm.test(\"Status code is 200 or 404\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);\r",
									"});\r",
									"\r",
									"// ✅ Validate Response Body Structure\r",
									"pm.test(\"Response contains valid booking details\", () => {\r",
									"    if (pm.response.code === 200) {\r",
									"        let jsonData = pm.response.json();\r",
									"        pm.expect(jsonData).to.have.property(\"firstname\");\r",
									"        pm.expect(jsonData).to.have.property(\"lastname\");\r",
									"        pm.expect(jsonData).to.have.property(\"totalprice\");\r",
									"        pm.expect(jsonData).to.have.property(\"depositpaid\");\r",
									"        pm.expect(jsonData).to.have.property(\"bookingdates\");\r",
									"        pm.expect(jsonData.bookingdates).to.have.property(\"checkin\");\r",
									"        pm.expect(jsonData.bookingdates).to.have.property(\"checkout\");\r",
									"    } else {\r",
									"        pm.test(\"Response should contain 'reason' for 404\", () => {\r",
									"            let jsonData = pm.response.json();\r",
									"            pm.expect(jsonData).to.have.property(\"reason\");\r",
									"        });\r",
									"    }\r",
									"});\r",
									"\r",
									"// ✅ Validate Content-Type\r",
									"pm.test(\"Content-Type is JSON\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"// ✅ Check Response Time (Performance Test)\r",
									"pm.test(\"Response time is within 2 seconds\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/1",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"1"
							]
						},
						"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/booking/1\r\n"
					},
					"response": []
				},
				{
					"name": "SC03_TC02_GetBookingWithInvalidId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Validate Status Code (Should return 404)\r",
									"pm.test(\"Status code is 404 for invalid Booking ID\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(404);\r",
									"});\r",
									"\r",
									"\r",
									"// ✅ Performance Check (Response should be within 2 seconds)\r",
									"pm.test(\"Response time is within acceptable limits\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/999999",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"999999"
							]
						},
						"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/booking/1\r\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "SC04_CreateBooking",
			"item": [
				{
					"name": "SC04_TC01_CreateValidBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"// ✅ Validate Response Structure\r",
									"pm.test(\"Response contains booking details\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"bookingid\");\r",
									"    pm.expect(jsonData).to.have.property(\"booking\");\r",
									"\r",
									"    let booking = jsonData.booking;\r",
									"    pm.expect(booking).to.have.property(\"firstname\", \"Jim\");\r",
									"    pm.expect(booking).to.have.property(\"lastname\", \"Brown\");\r",
									"    pm.expect(booking).to.have.property(\"totalprice\", 111);\r",
									"    pm.expect(booking).to.have.property(\"depositpaid\", true);\r",
									"    pm.expect(booking.bookingdates).to.have.property(\"checkin\", \"2018-01-01\");\r",
									"    pm.expect(booking.bookingdates).to.have.property(\"checkout\", \"2019-01-01\");\r",
									"});\r",
									"\r",
									"// ✅ Validate Response Content-Type (Should be JSON)\r",
									"pm.test(\"Content-Type is application/json\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"// ✅ Check if Booking ID is Numeric\r",
									"pm.test(\"Booking ID should be a number\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bookingid).to.be.a(\"number\");\r",
									"});\r",
									"\r",
									"// ✅ Performance Check (Response Time within 2 Seconds)\r",
									"pm.test(\"Response time is acceptable\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						},
						"description": "Generated from cURL: curl -X POST \\\r\n  https://restful-booker.herokuapp.com/booking \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "SC04_TC02_CreateBookingWithMissingFields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Validate Status Code (Should be 400)\r",
									"pm.test(\"Status code should be 400 Bad Request\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"// ✅ Validate Response Body (Should contain an error message)\r",
									"pm.test(\"Response contains an error message for missing fields\", () => {\r",
									"    let jsonData;\r",
									"    try {\r",
									"        jsonData = pm.response.json();\r",
									"        pm.expect(jsonData).to.have.property(\"reason\"); // Ensure error reason is provided\r",
									"    } catch (e) {\r",
									"        pm.test(\"Response is not in JSON format\", () => {\r",
									"            pm.expect(false).to.be.true; // Force failure if JSON parsing fails\r",
									"        });\r",
									"    }\r",
									"});\r",
									"\r",
									"// ✅ Verify Content-Type (Should be JSON)\r",
									"pm.test(\"Content-Type should be application/json\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"// ✅ Performance Check (Response should be within 2 seconds)\r",
									"pm.test(\"Response time is within acceptable limits\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"\",\r\n    \"lastname\" : \"\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						},
						"description": "Generated from cURL: curl -X POST \\\r\n  https://restful-booker.herokuapp.com/booking \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}'"
					},
					"response": []
				}
			]
		},
		{
			"name": "SC05_UpdateBooking",
			"item": [
				{
					"name": "SC05_TC01_UpdateBookingWithValidData",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Verify Status Code (Should be 200 OK)\r",
									"pm.test(\"Status code is 200 OK\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"// ✅ Validate Response Body\r",
									"pm.test(\"Response body should match the updated details\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"firstname\", \"James\");\r",
									"    pm.expect(jsonData).to.have.property(\"lastname\", \"Brown\");\r",
									"    pm.expect(jsonData).to.have.property(\"totalprice\", 111);\r",
									"    pm.expect(jsonData).to.have.property(\"depositpaid\", true);\r",
									"    pm.expect(jsonData.bookingdates).to.have.property(\"checkin\", \"2018-01-01\");\r",
									"    pm.expect(jsonData.bookingdates).to.have.property(\"checkout\", \"2019-01-01\");\r",
									"});\r",
									"\r",
									"// ✅ Validate Content-Type\r",
									"pm.test(\"Content-Type is application/json\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"// ✅ Check Response Time (Should be within 2 seconds)\r",
									"pm.test(\"Response time is within acceptable limits\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=f24561cf0620918"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/1",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"1"
							]
						},
						"description": "Generated from cURL: curl -X PUT \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Accept: application/json' \\\r\n  -H 'Cookie: token=abc123' \\\r\n  -d '{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "SC05_TC02_UpdateBookingWithInvalidId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"// ✅ Check Response Time (Should be within 2 seconds)\r",
									"pm.test(\"Response time is within acceptable limits\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=f24561cf0620918"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2025-03-09\",\r\n        \"checkout\" : \"2026-03-09\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/999999",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"999999"
							]
						},
						"description": "Generated from cURL: curl -X PUT \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Accept: application/json' \\\r\n  -H 'Cookie: token=abc123' \\\r\n  -d '{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "SC05_TC03_UpdateWithoutToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Verify Status Code (Should be 200 OK)\r",
									"pm.test(\"Status code is 200 OK\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(403);\r",
									"});\r",
									"\r",
									"\r",
									"// ✅ Check Response Time (Should be within 2 seconds)\r",
									"pm.test(\"Response time is within acceptable limits\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/1",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"1"
							]
						},
						"description": "Generated from cURL: curl -X PUT \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Accept: application/json' \\\r\n  -H 'Cookie: token=abc123' \\\r\n  -d '{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}'"
					},
					"response": []
				}
			]
		},
		{
			"name": "SC06_PartialUpdateBooking",
			"item": [
				{
					"name": "SC06_TC02_PartialUpdateInvalidData",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Verify Status Code (Should be 200 OK)\r",
									"pm.test(\"Status code is 200 OK\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"// ✅ Validate Response Body\r",
									"pm.test(\"Response body should contain updated fields\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"firstname\", \"James\");\r",
									"    pm.expect(jsonData).to.have.property(\"lastname\", \"Brown\");\r",
									"});\r",
									"\r",
									"// ✅ Check Content-Type\r",
									"pm.test(\"Content-Type is application/json\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=f24561cf0620918"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/1",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"1"
							]
						},
						"description": "Generated from cURL: curl -X PATCH \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Accept: application/json' \\\r\n  -H 'Cookie: token=abc123' \\\r\n  -d '{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "SC06_TC02_PartialUpdateInvalidData",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Verify Status Code (Should be 200 OK)\r",
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=7ab0a5c712b7fa4"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"123\",\r\n    \"lastname\" : \"Brown\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/1",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"1"
							]
						},
						"description": "Generated from cURL: curl -X PATCH \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Accept: application/json' \\\r\n  -H 'Cookie: token=abc123' \\\r\n  -d '{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "SC06_TC03_PartialUpdateWithoutToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Verify Status Code (Should be 403 Forbidden)\r",
									"pm.test(\"Status code is 403 Forbidden\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=f24561cf0620918",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/1",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"1"
							]
						},
						"description": "Generated from cURL: curl -X PATCH \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Accept: application/json' \\\r\n  -H 'Cookie: token=abc123' \\\r\n  -d '{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\"\r\n}'"
					},
					"response": []
				}
			]
		},
		{
			"name": "SC07_DeleteBooking",
			"item": [
				{
					"name": "SC07_TC01_DeleteValidBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Verify Status Code (Should be 201 Created or 204 No Content)\r",
									"pm.test(\"Status code is 201 Created or 204 No Content\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=6c3798012a80fa1"
							}
						],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/2",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"2"
							]
						},
						"description": "Generated from cURL: curl -X DELETE \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Cookie: token=abc123'"
					},
					"response": []
				},
				{
					"name": "SC07_TC01_DeleteValidBooking Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Verify Status Code (Should be 404 Not Found)\r",
									"pm.test(\"Status code is 404 Not Found\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=490319d86e3d283"
							}
						],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/999999",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"999999"
							]
						},
						"description": "Generated from cURL: curl -X DELETE \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Cookie: token=abc123'"
					},
					"response": []
				},
				{
					"name": "SC07_TC03_DeleteWithoutToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=abc123",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/1",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"1"
							]
						},
						"description": "Generated from cURL: curl -X DELETE \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Cookie: token=abc123'"
					},
					"response": []
				}
			]
		},
		{
			"name": "SC08_Ping - HealthCheck",
			"item": [
				{
					"name": "SC08_TC01_HealthCheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Verify Status Code (Should be 201 Created or 200 OK)\r",
									"pm.test(\"Status code is 201 Created or 200 OK\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"// ✅ Validate Response Body (Should contain \"Created\")\r",
									"pm.test('Response body should contain \"Created\"', () => {\r",
									"    pm.expect(pm.response.text()).to.include(\"Created\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/ping",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"ping"
							]
						},
						"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/ping"
					},
					"response": []
				},
				{
					"name": "SC08_TC03_HealthCheckWithInvalidURL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ✅ Verify Status Code (Should be 404 Not Found)\r",
									"pm.test(\"Status code is 404 Not Found\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(404);\r",
									"});\r",
									"\r",
									"// ✅ Validate Response Body (Should contain \"Not Found\")\r",
									"pm.test('Response body should contain \"Not Found\"', () => {\r",
									"    pm.expect(pm.response.text()).to.include(\"Not Found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/pingaaa",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"pingaaa"
							]
						},
						"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/ping"
					},
					"response": []
				}
			]
		}
	]
}